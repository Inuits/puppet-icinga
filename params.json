{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Puppet-icinga","tagline":"","body":"# Sample Usage\r\n\r\n### cat site.pp\r\n\r\n    Nagios_service {\r\n      host_name           => $::fqdn,\r\n      use                 => 'generic-service',\r\n      notification_period => '24x7',\r\n      target              => \"${::icinga::targetdir}/services/${::fqdn}.cfg\",\r\n      action_url          => '/pnp4nagios/graph?host=$HOSTNAME$&srv=$SERVICEDESC$',\r\n    }\r\n    \r\n    Nagios_contact {\r\n      ensure                        => present,\r\n      use                           => 'generic-contact',\r\n      host_notification_period      => '24x7',\r\n      service_notification_period   => '24x7',\r\n      service_notification_commands => 'notify-service-by-email',\r\n      host_notification_commands    => 'notify-host-by-email',\r\n      target                        => \"${::icinga::targetdir}/contacts/contacts.cfg\",\r\n      can_submit_commands           => '1',\r\n    }\r\n\r\n### cat nodes.pp\r\n\r\n    node client {\r\n      class { 'icinga': }\r\n    }\r\n    \r\n    node server {\r\n      class {\r\n        'icinga':\r\n          server        => 'true',\r\n          manage_repo   => 'true',\r\n          icinga_admins => [ 'admin,', 'dummy1,', 'dummy2' ],\r\n          plugins       => [ 'checkpuppet', 'pnp4nagios' ];\r\n      }\r\n    \r\n      icinga::user {\r\n        'dummy1':\r\n          ensure   => present,\r\n          password => 'default',\r\n          email    => 'dummy1@example.com',\r\n          pager    => '320000001';\r\n    \r\n        'dummy2':\r\n          ensure   => present,\r\n          password => 'default'\r\n          email    => 'dummy2@example.com',\r\n          pager    => '320000002';\r\n      }\r\n    }\r\n    \r\n### Inside your existing modules\r\n\r\n    @@nagios_service { \"check_tcp_123_${::fqdn}\":\r\n      check_command       => 'check_tcp!123',\r\n      service_description => 'check_tcp',\r\n    }\r\n\r\n\r\n### PuppetDoc\r\n\r\nParsed PuppetDoc can be found [here](http://arioch.github.com/puppet-icinga/).\r\n\r\n\r\n### Unit testing\r\n\r\n    bundle exec rake\r\n\r\n\r\n### Nagios plugin packages\r\n\r\nPackages for RHEL based operating systems can be found at Inuits' [RPM repository]\r\nA Debian mirror is currently not available yet. Building your own packages is very easy. You will find any necessary information on Inuits' [nagios-plugins] repository at Github.\r\n\r\n[RPM repository]: http://repo.inuits.eu\r\n[nagios-plugins]: https://github.com/Inuits/nagios-plugins\r\n\r\n### Known issues\r\n\r\n#### General\r\n\r\n  * Needs proper testing\r\n  * Using multiple Icinga servers with identical usernames you might run into the error below:\r\n \r\n    err: Failed to apply catalog: Cannot alias Nagios_contact[icinga.example.org-someuser] \r\n    to [\"someuser\"] at /etc/puppet/environments/refactor/modules/icinga/manifests/user.pp:48;\r\n    resource [\"Nagios_contact\", \"someuser\"] already declared\r\n\r\n\r\n#### RedHat\r\n\r\n  * Be aware if you wish to manage your own package repositories you're in for\r\n  a treat. You need packages from both the RPMForge and the EPEL repository.\r\n  However - and here's the tricky part - some of those packages conflict with\r\n  the ones in the other repository. The easiest way is to take Icinga and it's\r\n  dependencies from RPMForge. Nagios-plugins related packages should not be\r\n  taken from this repository otherwise a lot of EPEL packages or plugins will\r\n  break horribly.\r\n\r\n  The easy way out:\r\n    class { icinga: manage_repo => true; }\r\n\r\n  A more advanced approach would be to set up your own repo.\r\n  Hipsters these days seem to be fond of [Pulp] for this purpose.\r\n\r\n  [Pulp]: https://github.com/pulp/pulp\r\n\r\n#### Debian\r\n\r\n  * Some plugins may or may not work\r\n  * The PNP4Nagios plugin requires the backports repository on Squeeze.\r\n  * The PNP4Nagios plugin will not work on anything older than Squeeze.\r\n\r\n","google":""}